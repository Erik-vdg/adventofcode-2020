from adventofcode_2020.day_10 import jolt_differences, jolt_arrangements


def test_part_1():
    input = [
        16,
        10,
        15,
        5,
        1,
        11,
        7,
        19,
        6,
        12,
        4,
    ]
    result = jolt_differences(input)
    assert result[1] == 7
    assert result[3] == 5


def test_part_2():
    input = [
        16,
        10,
        15,
        5,
        1,
        11,
        7,
        19,
        6,
        12,
        4,
    ]
    result = jolt_arrangements(input)
    assert result == 8

    input_2 = [
        28,
        33,
        18,
        42,
        31,
        14,
        46,
        20,
        48,
        47,
        24,
        23,
        49,
        45,
        19,
        38,
        39,
        11,
        1,
        32,
        25,
        35,
        8,
        17,
        7,
        9,
        4,
        2,
        34,
        10,
        3,
    ]
    result = jolt_arrangements(input_2)
    assert result == 19208
    # a = [0, 1, 2, 4, 5, 6, 9]
    # diffs = [1, 1, 2, 1, 1, 3]
    # 0, 1, 2, 4 + 5
    # 0, 1, 4 + 5
    # 0, 2, 4 + 5
    # (0, 4) + 5
    # (0, 3) + 5
    # (0, 2) + 5

    # to add k
    # p(0, k) = p(0, k-3) + p(0, k-2) + p(0, k-1)
    # p(0,<0) = 0
    # p(0, 0) = 1
    # p(0, 1) = [(0, 1)] = 1
    # p(0, 2) = [(0, 1, 2), (0, 2)] = 2
    # p(0, 3) = []
    # p(0, 4) = [(0, 1, 4), (0, 1, 2, 4), (0, 2, 4)] = 3
    # p(0, 5) = [(0, 1, 4, 5), (0, 1, 2, 4, 5), (0, 2, 4, 5), (0, 1, 2, 5), (0, 2, 5)] = 5
    # p(0, 6) = [(0, 1, 4, 6), (0, 1, 2, 4, 6), (0, 2, 4, 6), (0, 1, 4, 5, 6), (0, 1, 2, 4, 5, 6), (0, 2, 4, 5, 6), (0, 1, 2, 5, 6), (0, 2, 5, 6)] = 8
